{"version":3,"sources":["common/providers/notifications.tsx","common/components/Wrapper/index.tsx","common/hooks/useApi/interceptor.tsx","common/hooks/useApi/utils.ts","common/hooks/useApi/index.tsx","common/urls.ts","common/hooks/useNotifications/index.tsx","pages/user/hooks/useFetchUser/index.tsx","pages/user/hooks/useEditUser/index.tsx","pages/user/components/EditUserForm/styles.ts","pages/user/components/EditUserForm/validations.ts","common/components/Loading/index.tsx","pages/user/components/EditUserForm/index.tsx","pages/user/components/EditPage/index.tsx","pages/user/hooks/useCreateUser/index.tsx","pages/user/components/CreatePage/index.tsx","pages/home/components/UsersTable/columns.tsx","pages/home/components/UsersTable/styles.tsx","pages/home/components/UsersTable/index.tsx","pages/home/hooks/useFetchUsers/index.tsx","pages/home/hooks/useDeleteUser/index.tsx","pages/home/index.tsx","pages/AppRouter.tsx","common/components/Notifications/styles.tsx","common/components/Notifications/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NotificationType","NotificationsContext","React","createContext","notification","addNotification","removeNotification","NotificationsProvider","children","useState","setNotification","contextValue","useCallback","message","type","addMessage","Provider","value","Container","styled","div","Page","instance","axios","create","baseURL","apiErrorMessage","e","err","response","Array","isArray","data","errors","map","initialValues","useApi","method","url","loading","setLoading","setErrors","a","payload","urlExtra","api","delete","get","apiErrors","join","sendRequest","reset","useGet","USERS","useNotifications","useContext","useFetchUser","id","user","setUser","notify","fetch","ERROR","useEffect","useEditUser","put","usePut","SUCCESS","save","saving","Form","form","FormGroup","Label","label","Input","input","FormError","Submit","button","userValidationSchema","Yup","shape","first_name","max","required","last_name","email","BounceAnimation","keyframes","DotWrapper","Dot","props","delay","Loading","initialUser","avatar","EditUserForm","onSubmit","useFormik","validationSchema","handleSubmit","handleChange","values","isValid","htmlFor","name","onChange","disabled","BackLink","Link","EditPage","useParams","to","useCreateUser","post","usePost","CreatePage","RemoveButton","columns","onDelete","Header","accessor","Date","Cell","onClick","Table","table","UsersTable","users","useTable","useMemo","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","useFetchUsers","setUsers","useDeleteUsers","useDelete","removing","remove","AddButton","Home","path","ToastMessage","DismissToast","Toast","App","AppRouter","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"uIAMYA,E,2DAAAA,O,iBAAAA,I,sBAAAA,M,KAeL,IAAMC,EAAuBC,IAAMC,cAExC,CACAC,aAAc,KACdC,gBAAiB,aACjBC,mBAAoB,eAGP,SAASC,EAAT,GAAqD,IAApBC,EAAmB,EAAnBA,SAAmB,EACzBC,mBACtC,MAF+D,mBAC1DL,EAD0D,KAC5CM,EAD4C,KAU3DC,EAA0C,CAC9CP,eACAC,gBAAiBO,uBACf,SAACC,EAASC,GAAV,OANe,SAACD,EAAiBC,GAAlB,OACjBJ,EAAgB,CAAEG,UAASC,SAKNC,CAAWF,EAASC,KACvC,IAEFR,mBAAoBM,uBAAY,kBAXNF,EAAgB,QAWa,KAGzD,OACE,kBAACT,EAAqBe,SAAtB,CAA+BC,MAAON,GACnCH,G,4gBChDA,IAAMU,EAAYC,IAAOC,IAAV,KAQTC,EAAOF,IAAOC,IAAV,K,+CCHFE,E,OALEC,EAAMC,OAAO,CAC1BC,QAAS,2BCGAC,EAAkB,SAACC,GAA+C,IAAhCC,EAA+B,uDAAjB,GAC3D,GAAID,EAAEE,UAAYC,MAAMC,QAAQJ,EAAEE,SAASG,MAAO,CAChD,IAAMC,EAASN,EAAEE,SAASG,KAC1B,OAAOC,EAAOC,KAAI,qBAAGrB,WAEvB,MAAO,CAACe,ICCJO,GAA2B,EAA3BA,EAA0C,GACzC,SAASC,EAAyBC,EAAiBC,GAAc,IAAD,EACvC7B,mBAAS0B,GAD8B,mBAC9DI,EAD8D,KACrDC,EADqD,OAEzC/B,mBAAiB0B,GAFwB,mBAE9DF,EAF8D,KAEtDQ,EAFsD,iDASrE,kDAAAC,EAAA,0FAGqB,GAFnBC,EADF,EACEA,QADF,IAEEC,gBAFF,MAEa,GAFb,EAKEJ,GAAW,GALb,SAQmB,SAAXH,GAAgC,QAAXA,EAR7B,gCASuBQ,EAAIR,GAAWC,EAAMM,EAAUD,GATtD,OASMd,EATN,iCAU0B,WAAXQ,EAVf,kCAWuBQ,EAAIC,OAAOR,EAAMM,GAXxC,QAWMf,EAXN,gDAauBgB,EAAIE,IAAOT,GAblC,QAaMT,EAbN,sBAgBIY,EAAU,IAhBd,kBAiBW,CACLE,QAASd,EAASG,OAlBxB,wCAqBUgB,EAAYtB,EAAgB,EAAD,GAAI,KAAEb,SAASoC,KAAK,MACrDR,EAAUO,GACJA,EAvBV,yBAyBIR,GAAW,GAzBf,8EATqE,sBAsCrE,MAAO,CACLP,SACAM,UACAW,YAzCmE,2CA0CnEC,MAtCF,WACEX,EAAWL,GACXM,EAAUN,KAyEP,SAASiB,EAAyBd,GACvC,IAAMS,EAAMX,EAAU,MAAOE,GAE7B,MAAO,CACLL,OAAQc,EAAId,OACZc,IAAKA,EAAIG,YACTX,QAASQ,EAAIR,QACbY,MAAOJ,EAAII,OCnGR,IAAME,EAAQ,UCUNC,MAPf,WAA6B,IAAD,EACoCC,qBAC5DtD,GAEF,MAAO,CAAEI,gBAJiB,EAClBA,gBAGkBC,mBAJA,EACDA,mBAGqBF,aAJpB,EACmBA,eC8BhCoD,EA5BM,SAACC,GAAgB,IAAD,EACXhD,qBADW,mBAC5BiD,EAD4B,KACtBC,EADsB,KAE7Bd,EAAMO,EAAkBC,EAAQI,GAChCG,EAASN,IAHoB,SAUpBO,IAVoB,2EAUnC,8BAAAnB,EAAA,+EAE8BG,EAAIE,MAFlC,gBAEYJ,EAFZ,EAEYA,QACRgB,EAAQhB,EAAQX,MAHpB,gDAKI4B,EAAOvD,gBAAP,2BAEEL,EAAiB8D,OAEnBjB,EAAIM,QATR,0DAVmC,sBAsBnC,OAjBAY,qBAAU,WACRF,MAEC,IAcI,CACLA,QACAtB,QAASM,EAAIN,QACbmB,SCDWM,EAzBK,WAClB,IAAMnB,EJ2ED,SAAkCP,GACvC,IAAM2B,EAAM7B,EAAU,MAAOE,GAE7B,MAAO,CACLL,OAAQgC,EAAIhC,OACZgC,IAAKA,EAAIf,YACTX,QAAS0B,EAAI1B,QACbY,MAAOc,EAAId,OIlFDe,CAAab,GACnBO,EAASN,IAFS,4CAIxB,WAAoBX,GAApB,SAAAD,EAAA,+EAEUG,EAAIoB,IAAI,CACZtB,UACAC,SAAUD,EAAQc,KAJxB,OAMIG,EAAOvD,gBAAgB,eAAgBL,EAAiBmE,SAN5D,gDAQIP,EAAOvD,gBAAP,oCAC+BwC,EAAIZ,QACjCjC,EAAiB8D,OAEnBjB,EAAIM,QAZR,0DAJwB,sBAoBxB,MAAO,CACLiB,KArBsB,4CAsBtBC,OAAQxB,EAAIN,U,q3BCzBT,IAAM+B,EAAOnD,IAAOoD,KAAV,KAIJC,EAAYrD,IAAOC,IAAV,KAMTqD,EAAQtD,IAAOuD,MAAV,KAMLC,EAAQxD,IAAOyD,MAAV,KAQLC,EAAY1D,IAAOC,IAAV,KAKT0D,EAAS3D,IAAO4D,OAAV,K,QCjBJC,EAZcC,MAAaC,MAAqB,CAC7DC,WAAYF,MACTG,IAAI,GAAI,2CACRC,SAAS,6BACZC,UAAWL,MACRG,IAAI,GAAI,2CACRC,SAAS,4BACZE,MAAON,MACJM,MAAM,8BACNF,SAAS,2B,wkBCRd,IAAMG,EAAkBC,YAAH,KAMfC,EAAavE,IAAOC,IAAV,KAOVuE,EAAMxE,IAAOC,IAAV,IAMMoE,GACM,SAACI,GAAD,OAA8BA,EAAMC,SAW1CC,GARC,kBACd,kBAACJ,EAAD,KACE,kBAACC,EAAD,CAAKE,MAAM,OACX,kBAACF,EAAD,CAAKE,MAAM,QACX,kBAACF,EAAD,CAAKE,MAAM,UClBTE,GAAoB,CACxBC,OAAQ,GACRT,MAAO,GACPJ,WAAY,GACZ1B,GAAI,EACJ6B,UAAW,IA2DEW,GAxDM,SAAC,GAAqD,IAAD,IAAlDvC,YAAkD,MAA3CqC,GAA2C,EAA9B1B,EAA8B,EAA9BA,OAAQ6B,EAAsB,EAAtBA,SAAsB,EACRC,YAAU,CACxEhE,cAAeuB,EACf0C,iBAAkBpB,EAClBkB,aAHMG,EADgE,EAChEA,aAAcpE,EADkD,EAClDA,OAAQqE,EAD0C,EAC1CA,aAAcC,EAD4B,EAC5BA,OAAQC,EADoB,EACpBA,QAKpD,OACE,kBAAClC,EAAD,CAAM4B,SAAUG,GACd,kBAAC7B,EAAD,KACE,kBAACC,EAAD,CAAOgC,QAAQ,cAAf,cACA,kBAAC9B,EAAD,CACElB,GAAG,YACHiD,KAAK,aACL5F,KAAK,OACL6F,SAAUL,EACVrF,MAAOsF,EAAOpB,WACdE,UAAQ,IAETpD,EAAOkD,YAAc,kBAACN,EAAD,KAAY5C,EAAOkD,aAE3C,kBAACX,EAAD,KACE,kBAACC,EAAD,CAAOgC,QAAQ,aAAf,aACA,kBAAC9B,EAAD,CACElB,GAAG,WACHiD,KAAK,YACL5F,KAAK,OACL6F,SAAUL,EACVrF,MAAOsF,EAAOjB,UACdD,UAAQ,IAETpD,EAAOqD,WAAa,kBAACT,EAAD,KAAY5C,EAAOqD,YAE1C,kBAACd,EAAD,KACE,kBAACC,EAAD,CAAOgC,QAAQ,SAAf,iBACA,kBAAC9B,EAAD,CACElB,GAAG,QACHiD,KAAK,QACL5F,KAAK,QACL6F,SAAUL,EACVrF,MAAOsF,EAAOhB,MACdF,UAAQ,IAETpD,EAAOsD,OAAS,kBAACV,EAAD,KAAY5C,EAAOsD,QAGrClB,EACC,kBAAC,GAAD,MAEA,kBAACS,EAAD,CAAQrB,GAAG,cAAcmD,UAAWJ,EAAS1F,KAAK,UAAlD,Y,gHC5DR,IAAM+F,GAAW1F,YAAO2F,IAAP3F,CAAH,MAmBC4F,GAdE,WAAO,IAChBtD,EAAOuD,cAAPvD,GADe,EAEKD,EAAaC,GAA/BlB,EAFa,EAEbA,QAASmB,EAFI,EAEJA,KAFI,EAGIM,IAAjBI,EAHa,EAGbA,KAAMC,EAHO,EAGPA,OACd,OAAI9B,GAA2B,qBAATmB,EAA6B,kBAAC,GAAD,MAG/C,oCACE,kBAACmD,GAAD,CAAUI,GAAG,KAAK,UAClB,kBAAC,GAAD,CAAcvD,KAAMA,EAAMW,OAAQA,EAAQ6B,SAAU9B,MCO7C8C,GAxBO,WACpB,IAAMrE,EVgED,SAAmCP,GACxC,IAAM6E,EAAO/E,EAAU,OAAQE,GAE/B,MAAO,CACLL,OAAQkF,EAAKlF,OACbkF,KAAMA,EAAKjE,YACXX,QAAS4E,EAAK5E,QACdY,MAAOgE,EAAKhE,OUvEFiE,CAAc/D,GACpBO,EAASN,IAFW,4CAI1B,WAAoBX,GAApB,SAAAD,EAAA,+EAEUG,EAAIsE,KAAK,CACbxE,YAHN,OAKIiB,EAAOvD,gBAAgB,eAAgBL,EAAiBmE,SAL5D,gDAOIP,EAAOvD,gBAAP,0CAEEL,EAAiB8D,OAEnBjB,EAAIM,QAXR,0DAJ0B,sBAmB1B,MAAO,CACLiB,KApBwB,4CAqBxBC,OAAQxB,EAAIN,U,gHCpBhB,IAAMsE,GAAW1F,YAAO2F,IAAP3F,CAAH,MAgBCkG,GAXI,WAAO,IAAD,EACEH,KAAjB9C,EADe,EACfA,KAAMC,EADS,EACTA,OAEd,OACE,oCACE,kBAAC,GAAD,CAAU4C,GAAG,KAAK,UAClB,kBAAC,GAAD,CAAc5C,OAAQA,EAAQ6B,SAAU9B,M,wHCZ9C,IAAMkD,GAAenG,IAAO4D,OAAV,MAmCHwC,GA9B0D,SACvEC,GADuE,MAEpE,CACH,CACEC,OAAQ,aACRC,SAAU,cAEZ,CACED,OAAQ,YACRC,SAAU,aAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,GACRC,SAAU,KACVjE,GAAI,GAAK,IAAIkE,KACbC,KAAM,gBAAG3G,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,CAAMgG,GAAE,iBAAYhG,IAApB,UAEvB,CACEwG,OAAQ,GACRC,SAAU,KACVE,KAAM,gBAAG3G,EAAH,EAAGA,MAAH,OACJ,kBAACqG,GAAD,CAAcO,QAAS,kBAAML,EAASvG,KAAtC,c,ixDCjCC,IAAM6G,GAAQ3G,IAAO4G,MAAV,MC+CHC,GAvCI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOT,EAAsB,EAAtBA,SAAsB,EAO7CU,oBAAS,CACXX,QAASY,mBAAQ,kBAAMZ,GAAQC,KAAW,CAACA,IAC3CxF,KAAMiG,IAPNG,EAF+C,EAE/CA,cACAC,EAH+C,EAG/CA,kBACAC,EAJ+C,EAI/CA,aACAC,EAL+C,EAK/CA,KACAC,EAN+C,EAM/CA,WAMF,OACE,kBAACV,GAAUM,IACT,+BACGE,EAAapG,KAAI,SAACuG,GAAD,OAChB,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQzG,KAAI,SAAC0G,GAAD,OACvB,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,mBAKxD,0BAAWT,IACRE,EAAKrG,KAAI,SAAC6G,GAET,OADAP,EAAWO,GAET,uBAAQA,EAAIC,cACTD,EAAIE,MAAM/G,KAAI,SAACgH,GACd,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKJ,OAAO,mBCAlDM,GA7BO,WAAO,IAAD,EACA3I,mBAAgB,IADhB,mBACnBwH,EADmB,KACZoB,EADY,KAEpBxG,EAAMO,EAAmBC,GACzBO,EAASN,IAHW,SAUXO,IAVW,2EAU1B,8BAAAnB,EAAA,+EAE8BG,EAAIE,MAFlC,gBAEYJ,EAFZ,EAEYA,QACR0G,EAAS1G,EAAQX,MAHrB,gDAKI4B,EAAOvD,gBACL,4BACAL,EAAiB8D,OAEnBjB,EAAIM,QATR,0DAV0B,sBAuB1B,OAlBAY,qBAAU,WACRF,MAEC,IAeI,CACLA,QACAtB,QAASM,EAAIN,QACb0F,UCTWqB,GAlBQ,WACrB,IAAMzG,EhBiDD,SAAqCP,GAC1C,IAAM6E,EAAO/E,EAAU,SAAUE,GAEjC,MAAO,CACLL,OAAQkF,EAAKlF,OACba,OAAQqE,EAAKjE,YACbX,QAAS4E,EAAK5E,QACdY,MAAOgE,EAAKhE,OgBxDFoG,CAAsBlG,GAC5BO,EAASN,IAFY,4CAG3B,WAAsBG,GAAtB,SAAAf,EAAA,+EAEUG,EAAIC,OAAO,CAAEF,SAAUa,IAFjC,OAGIG,EAAOvD,gBAAgB,eAAgBL,EAAiBmE,SAH5D,gDAKIP,EAAOvD,gBAAgB,wBAAyBL,EAAiB8D,OACjEjB,EAAIM,QANR,0DAH2B,sBAa3B,MAAO,CACLqG,SAAU3G,EAAIN,QACdkH,OAfyB,8C,4LCD7B,IAAMC,GAAYvI,YAAO2F,IAAP3F,CAAH,MAsBAwI,GAbF,WAAO,IAAD,EACUP,KAAnB7G,EADS,EACTA,QAAS0F,EADA,EACAA,MACXsB,EAAYD,KAClB,OAAI/G,GAAWgH,EAAUC,SAAiB,kBAAC,GAAD,MAGtC,oCACE,kBAACE,GAAD,CAAWzC,GAAG,iBAAd,YACA,kBAAC,GAAD,CAAYgB,MAAOA,EAAOT,SAAU+B,EAAUE,WCnBvC,qBACb,kBAACvI,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuI,KAAK,iBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,Y,mkBChBL,IAAMC,GAAe1I,IAAOC,IAAV,MAWZ0I,GAAe3I,IAAO4D,OAAV,MCaVgF,GArBD,WAAO,IAAD,EAC2BzG,IAArChD,EADU,EACVA,mBAAoBF,EADV,EACUA,aAM5B,OACEA,GACE,kBAACyJ,GAAD,KACGzJ,EAAaU,OAASd,EAAiBmE,SAAW,SAClD/D,EAAaU,OAASd,EAAiB8D,OAAS,eAChD1D,EAAaS,QACd,kBAACiJ,GAAD,CAAcrG,GAAG,YAAYoE,QAVnB,WACdvH,MASI,OCbO,SAAS0J,KACtB,OACE,kBAACzJ,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC0J,GAAD,OCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASzB,OACP,kBAAC,IAAM0B,WAAP,KACE,kBAACR,GAAD,OAEFS,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMrK,a","file":"static/js/main.a02cf2c0.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\ninterface Props {\n  children: any;\n}\n\nexport enum NotificationType {\n  ERROR,\n  SUCCESS,\n}\n\nexport interface NotificationPayload {\n  message: string;\n  type: NotificationType;\n}\n\ninterface NotificationsContextProps {\n  notification: NotificationPayload | null;\n  addNotification: (message: string, type: NotificationType) => void;\n  removeNotification: () => void;\n}\nexport const NotificationsContext = React.createContext<\n  NotificationsContextProps\n>({\n  notification: null,\n  addNotification: () => {},\n  removeNotification: () => {},\n});\n\nexport default function NotificationsProvider({ children }: Props) {\n  const [notification, setNotification] = useState<NotificationPayload | null>(\n    null\n  );\n\n  const removeMessage = () => setNotification(null);\n\n  const addMessage = (message: string, type: NotificationType) =>\n    setNotification({ message, type });\n\n  const contextValue: NotificationsContextProps = {\n    notification,\n    addNotification: useCallback(\n      (message, type) => addMessage(message, type),\n      []\n    ),\n    removeNotification: useCallback(() => removeMessage(), []),\n  };\n\n  return (\n    <NotificationsContext.Provider value={contextValue}>\n      {children}\n    </NotificationsContext.Provider>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0;\n  display: grid;\n  grid-template-rows: 100vh;\n  grid-template-columns: 100vw;\n  background: linear-gradient(45deg, #4158d0, #c850c0);\n`;\n\nexport const Page = styled.div`\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n  border-radius: 10px;\n  background: #fff;\n  overflow: hidden;\n  min-height: 20vh;\n  min-width: 20vw;\n  animation: ease-in-out all 1s;\n`;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://reqres.in/api/',\n});\n\n\nexport default instance;\n","import { AxiosError } from 'axios';\n\ninterface IApiValidationErrorResponse {\n  message: string;\n}\n\nexport const apiErrorMessage = (e: AxiosError, err: string = ''): string[] => {\n  if (e.response && Array.isArray(e.response.data)) {\n    const errors = e.response.data as IApiValidationErrorResponse[];\n    return errors.map(({ message }) => message);\n  }\n  return [err];\n};\n","import { useState } from \"react\";\nimport { AxiosResponse } from \"axios\";\nimport api from \"./interceptor\";\nimport { apiErrorMessage } from \"./utils\";\n\ntype Methods = \"post\" | \"put\" | \"delete\" | \"get\";\n\ninterface IHTTPRequest<D extends object> {\n  payload?: D;\n  urlExtra?: string | number;\n}\n\nconst initialValues = { loading: false, errors: \"\" };\nexport function useApi<R extends object>(method: Methods, url: string) {\n  const [loading, setLoading] = useState(initialValues.loading);\n  const [errors, setErrors] = useState<string>(initialValues.errors);\n\n  function reset() {\n    setLoading(initialValues.loading);\n    setErrors(initialValues.errors);\n  }\n\n  async function sendRequest<D extends object>({\n    payload,\n    urlExtra = \"\",\n  }: IHTTPRequest<D> = {}) {\n    let response: AxiosResponse<R>;\n    setLoading(true);\n\n    try {\n      if (method === \"post\" || method === \"put\") {\n        response = await api[method]<R>(url + urlExtra, payload);\n      } else if (method === \"delete\") {\n        response = await api.delete(url + urlExtra);\n      } else {\n        response = await api.get<R>(url);\n      }\n\n      setErrors(\"\");\n      return {\n        payload: response.data,\n      };\n    } catch (e) {\n      const apiErrors = apiErrorMessage(e, e.message).join(\", \");\n      setErrors(apiErrors);\n      throw apiErrors;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return {\n    errors,\n    loading,\n    sendRequest,\n    reset,\n  };\n}\n\nexport function useDelete<R extends object>(url: string) {\n  const post = useApi<R>(\"delete\", url);\n\n  return {\n    errors: post.errors,\n    delete: post.sendRequest,\n    loading: post.loading,\n    reset: post.reset,\n  };\n}\n\nexport function usePost<R extends object>(url: string) {\n  const post = useApi<R>(\"post\", url);\n\n  return {\n    errors: post.errors,\n    post: post.sendRequest,\n    loading: post.loading,\n    reset: post.reset,\n  };\n}\n\nexport function usePut<R extends object>(url: string) {\n  const put = useApi<R>(\"put\", url);\n\n  return {\n    errors: put.errors,\n    put: put.sendRequest,\n    loading: put.loading,\n    reset: put.reset,\n  };\n}\n\nexport function useGet<R extends object>(url: string) {\n  const get = useApi<R>(\"get\", url);\n\n  return {\n    errors: get.errors,\n    get: get.sendRequest,\n    loading: get.loading,\n    reset: get.reset,\n  };\n}\n","export const USERS = '/users/';","import { useContext } from \"react\";\nimport { NotificationsContext } from \"../../providers/notifications\";\n\nfunction useNotifications() {\n  const { addNotification, removeNotification, notification } = useContext(\n    NotificationsContext\n  );\n  return { addNotification, removeNotification, notification };\n}\n\nexport default useNotifications;\n","import { useEffect, useState } from \"react\";\nimport { useGet } from \"../../../../common/hooks/useApi\";\nimport { USERS } from \"../../../../common/urls\";\nimport { NotificationType } from \"../../../../common/providers/notifications\";\nimport useNotifications from \"../../../../common/hooks/useNotifications\";\n\nconst useFetchUser = (id: number) => {\n  const [user, setUser] = useState<User>();\n  const api = useGet<FetchUser>(USERS + id);\n  const notify = useNotifications();\n\n  useEffect(() => {\n    fetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function fetch() {\n    try {\n      const { payload } = await api.get();\n      setUser(payload.data);\n    } catch (e) {\n      notify.addNotification(\n        `Error while getting user`,\n        NotificationType.ERROR\n      );\n      api.reset();\n    }\n  }\n  return {\n    fetch,\n    loading: api.loading,\n    user,\n  };\n};\nexport default useFetchUser;\n","import { usePut } from \"../../../../common/hooks/useApi\";\nimport { USERS } from \"../../../../common/urls\";\nimport useNotifications from \"../../../../common/hooks/useNotifications\";\nimport { NotificationType } from \"../../../../common/providers/notifications\";\n\nconst useEditUser = () => {\n  const api = usePut<User>(USERS);\n  const notify = useNotifications();\n\n  async function save(payload: User) {\n    try {\n      await api.put({\n        payload,\n        urlExtra: payload.id,\n      });\n      notify.addNotification(\"User Updated\", NotificationType.SUCCESS);\n    } catch (e) {\n      notify.addNotification(\n        `Error while updating user:${api.errors}`,\n        NotificationType.ERROR\n      );\n      api.reset();\n    }\n  }\n\n  return {\n    save,\n    saving: api.loading,\n  };\n};\nexport default useEditUser;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  padding: 0 1vw;\n`;\n\nexport const FormGroup = styled.div`\n  display: block;\n  width: 300px;\n  margin: 2vh auto;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 0.5em;\n  text-align: left;\n  display: block;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5em;\n  border: none;\n  border-radius: 3px;\n  width: 100%;\n  margin-bottom: 0.5em;\n`;\n\nexport const FormError = styled.div`\n  color: red;\n  margin-top: 0;\n`;\n\nexport const Submit = styled.button`\n  margin: 1vh 0;\n  border-radius: 1rem;\n  padding: 1vh;\n  border: 0;\n  font-size: 1rem;\n  cursor: pointer;\n  :hover {\n    border: 1px solid rgba(65, 88, 208, 0.7);\n  }\n`;\n","import * as Yup from \"yup\";\n\nconst userValidationSchema = Yup.object().shape<Partial<User>>({\n  first_name: Yup.string()\n    .max(40, \"Please enter no more than 40 characters\")\n    .required(\"Please enter a first name\"),\n  last_name: Yup.string()\n    .max(40, \"Please enter no more than 40 characters\")\n    .required(\"Please enter a last name\"),\n  email: Yup.string()\n    .email(\"Please enter a valid email\")\n    .required(\"Please enter an email\"),\n});\n\nexport default userValidationSchema;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst BounceAnimation = keyframes`\n  0% { margin-bottom: 0; }\n  50% { margin-bottom: 15px }\n  100% { margin-bottom: 0 }\n`;\n\nconst DotWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20px;\n`;\n\nconst Dot = styled.div`\n  background: linear-gradient(45deg, #4158d0, #c850c0);\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  margin: 0 5px;\n  animation: ${BounceAnimation} 0.5s linear infinite;\n  animation-delay: ${(props: { delay: string }) => props.delay};\n`;\n\nconst Loading = () => (\n  <DotWrapper>\n    <Dot delay=\"0s\" />\n    <Dot delay=\".1s\" />\n    <Dot delay=\".2s\" />\n  </DotWrapper>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Form, FormError, FormGroup, Input, Label, Submit } from \"./styles\";\nimport userValidationSchema from \"./validations\";\nimport Loading from \"../../../../common/components/Loading\";\n\ninterface Props {\n  user?: User;\n  saving: boolean;\n  onSubmit: (user: User) => void;\n}\n\nconst initialUser: User = {\n  avatar: \"\",\n  email: \"\",\n  first_name: \"\",\n  id: 0,\n  last_name: \"\",\n};\n\nconst EditUserForm = ({ user = initialUser, saving, onSubmit }: Props) => {\n  const { handleSubmit, errors, handleChange, values, isValid } = useFormik({\n    initialValues: user,\n    validationSchema: userValidationSchema,\n    onSubmit,\n  });\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        <Label htmlFor=\"first_name\">First Name</Label>\n        <Input\n          id=\"firstName\"\n          name=\"first_name\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.first_name}\n          required\n        />\n        {errors.first_name && <FormError>{errors.first_name}</FormError>}\n      </FormGroup>\n      <FormGroup>\n        <Label htmlFor=\"last_name\">Last Name</Label>\n        <Input\n          id=\"lastName\"\n          name=\"last_name\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.last_name}\n          required\n        />\n        {errors.last_name && <FormError>{errors.last_name}</FormError>}\n      </FormGroup>\n      <FormGroup>\n        <Label htmlFor=\"email\">Email Address</Label>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          onChange={handleChange}\n          value={values.email}\n          required\n        />\n        {errors.email && <FormError>{errors.email}</FormError>}\n      </FormGroup>\n\n      {saving ? (\n        <Loading />\n      ) : (\n        <Submit id=\"form-submit\" disabled={!isValid} type=\"submit\">\n          Submit\n        </Submit>\n      )}\n    </Form>\n  );\n};\n\nexport default EditUserForm;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport useFetchUser from \"../../hooks/useFetchUser\";\nimport useEditUser from \"../../hooks/useEditUser\";\nimport EditUserForm from \"../EditUserForm\";\nimport Loading from \"../../../../common/components/Loading\";\n\nconst BackLink = styled(Link)`\n  padding: 1rem;\n  text-align: left;\n`;\n\nconst EditPage = () => {\n  let { id } = useParams();\n  const { loading, user } = useFetchUser(id);\n  const { save, saving } = useEditUser();\n  if (loading || typeof user === \"undefined\") return <Loading />;\n  else\n    return (\n      <>\n        <BackLink to=\"/\">{\"< Back\"}</BackLink>\n        <EditUserForm user={user} saving={saving} onSubmit={save} />\n      </>\n    );\n};\n\nexport default EditPage;\n","import { usePost } from \"../../../../common/hooks/useApi\";\nimport { USERS } from \"../../../../common/urls\";\nimport useNotifications from \"../../../../common/hooks/useNotifications\";\nimport { NotificationType } from \"../../../../common/providers/notifications\";\n\nconst useCreateUser = () => {\n  const api = usePost<User>(USERS);\n  const notify = useNotifications();\n\n  async function save(payload: User) {\n    try {\n      await api.post({\n        payload,\n      });\n      notify.addNotification(\"User Created\", NotificationType.SUCCESS);\n    } catch (e) {\n      notify.addNotification(\n        `Error while creating user:${e}`,\n        NotificationType.ERROR\n      );\n      api.reset();\n    }\n  }\n\n  return {\n    save,\n    saving: api.loading,\n  };\n};\nexport default useCreateUser;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport EditUserForm from \"../EditUserForm\";\nimport useCreateUser from \"../../hooks/useCreateUser\";\n\nconst BackLink = styled(Link)`\n  padding: 1rem;\n  text-align: left;\n`;\n\nconst CreatePage = () => {\n  const { save, saving } = useCreateUser();\n\n  return (\n    <>\n      <BackLink to=\"/\">{\"< Back\"}</BackLink>\n      <EditUserForm saving={saving} onSubmit={save} />\n    </>\n  );\n};\n\nexport default CreatePage;\n","import React from \"react\";\nimport { Column } from \"react-table\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst RemoveButton = styled.button`\n  background: #fff;\n  border: none;\n`;\n\nconst columns: (onDelete: (id: number) => void) => Array<Column<User>> = (\n  onDelete\n) => [\n  {\n    Header: \"First Name\",\n    accessor: \"first_name\",\n  },\n  {\n    Header: \"Last Name\",\n    accessor: \"last_name\",\n  },\n  {\n    Header: \"Email\",\n    accessor: \"email\",\n  },\n  {\n    Header: \"\",\n    accessor: \"id\",\n    id: \"\" + new Date(),\n    Cell: ({ value }) => <Link to={`/users/${value}`}>Edit</Link>,\n  },\n  {\n    Header: \"\",\n    accessor: \"id\",\n    Cell: ({ value }) => (\n      <RemoveButton onClick={() => onDelete(value)}>Remove</RemoveButton>\n    ),\n  },\n];\n\nexport default columns;\n","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  background: white;\n  overflow: hidden;\n  width: 90vw;\n  margin: 0 auto;\n  position: relative;\n\n  * {\n    position: relative;\n  }\n  td,\n  th {\n    padding-left: 8px;\n  }\n  thead tr {\n    height: 60px;\n    background: #36304a;\n  }\n  tbody tr {\n    height: 50px;\n  }\n  tbody tr:last-child {\n    border: 0;\n  }\n  td,\n  th {\n    text-align: left;\n  }\n\n  th {\n    font-size: 18px;\n    color: #fff;\n    line-height: 1.2;\n    font-weight: unset;\n  }\n\n  tbody tr:nth-child(even) {\n    background-color: #f5f5f5;\n  }\n\n  tbody tr {\n    font-size: 15px;\n    color: #808080;\n    line-height: 1.2;\n    font-weight: unset;\n  }\n\n  tbody tr:hover {\n    color: #555555;\n    background-color: #f5f5f5;\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 992px) {\n     {\n      display: block;\n      height: 80vh;\n      overflow: scroll;\n    }\n    > *,\n    tr,\n    td,\n    th {\n      display: block;\n    }\n    thead {\n      display: none;\n    }\n    tbody tr {\n      height: auto;\n      padding: 37px 0;\n    }\n    tbody tr td {\n      padding-left: 40% !important;\n      margin-bottom: 24px;\n    }\n    tbody tr td:last-child {\n      margin-bottom: 0;\n    }\n    tbody tr td:before {\n      font-size: 14px;\n      color: #999999;\n      line-height: 1.2;\n      font-weight: unset;\n      position: absolute;\n      width: 40%;\n      left: 30px;\n      top: 0;\n    }\n    tbody tr td:nth-child(1):before {\n      content: \"First Name\";\n    }\n    tbody tr td:nth-child(2):before {\n      content: \"Last Name\";\n    }\n    tbody tr td:nth-child(3):before {\n      content: \"Email\";\n    }\n    tbody tr {\n      font-size: 14px;\n    }\n  }\n`;\n","import React, { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport columns from \"./columns\";\nimport { Table } from \"./styles\";\n\ninterface Props {\n  users: Users;\n  onDelete: (id: number) => Promise<void>;\n}\n\nconst UsersTable = ({ users, onDelete }: Props) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns: useMemo(() => columns(onDelete), [onDelete]),\n    data: users,\n  });\n\n  return (\n    <Table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default UsersTable;\n","import { useEffect, useState } from \"react\";\nimport { useGet } from \"../../../../common/hooks/useApi\";\nimport { USERS } from \"../../../../common/urls\";\nimport { NotificationType } from \"../../../../common/providers/notifications\";\nimport useNotifications from \"../../../../common/hooks/useNotifications\";\n\ninterface FetchUsers {\n  data: Users;\n}\n\nconst useFetchUsers = () => {\n  const [users, setUsers] = useState<Users>([]);\n  const api = useGet<FetchUsers>(USERS);\n  const notify = useNotifications();\n\n  useEffect(() => {\n    fetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function fetch() {\n    try {\n      const { payload } = await api.get();\n      setUsers(payload.data);\n    } catch (e) {\n      notify.addNotification(\n        \"Unable to fetch all users\",\n        NotificationType.ERROR\n      );\n      api.reset();\n    }\n  }\n\n  return {\n    fetch,\n    loading: api.loading,\n    users,\n  };\n};\nexport default useFetchUsers;\n","import { useDelete } from \"../../../../common/hooks/useApi\";\nimport { USERS } from \"../../../../common/urls\";\nimport { NotificationType } from \"../../../../common/providers/notifications\";\nimport useNotifications from \"../../../../common/hooks/useNotifications\";\n\ninterface FetchUsers {\n  data: Users;\n}\n\nconst useDeleteUsers = () => {\n  const api = useDelete<FetchUsers>(USERS);\n  const notify = useNotifications();\n  async function remove(id: number) {\n    try {\n      await api.delete({ urlExtra: id });\n      notify.addNotification(\"User Removed\", NotificationType.SUCCESS);\n    } catch (e) {\n      notify.addNotification(\"User unable to remove\", NotificationType.ERROR);\n      api.reset();\n    }\n  }\n\n  return {\n    removing: api.loading,\n    remove,\n  };\n};\nexport default useDeleteUsers;\n","import React from \"react\";\nimport Loading from \"../../common/components/Loading\";\nimport UsersTable from \"./components/UsersTable\";\nimport useFetchUsers from \"./hooks/useFetchUsers\";\nimport useDeleteUsers from \"./hooks/useDeleteUser\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst AddButton = styled(Link)`\n  position: absolute;\n  top: 1vh;\n  color: #000;\n  background: #fff;\n  border-radius: 1rem;\n  padding: 1rem;\n`;\n\nconst Home = () => {\n  const { loading, users } = useFetchUsers();\n  const useDelete = useDeleteUsers();\n  if (loading || useDelete.removing) return <Loading />;\n  else\n    return (\n      <>\n        <AddButton to=\"/users/create\">Add User</AddButton>\n        <UsersTable users={users} onDelete={useDelete.remove} />\n      </>\n    );\n};\n\nexport default Home;\n","import { Container, Page } from \"../common/components/Wrapper\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { CreatePage, EditPage } from \"./user\";\nimport Home from \"./home\";\nimport React from \"react\";\n\nexport default () => (\n  <Container>\n    <Page>\n      <Router>\n        <Switch>\n          <Route path=\"/users/create\">\n            <CreatePage />\n          </Route>\n          <Route path=\"/users/:id\">\n            <EditPage />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </Page>\n  </Container>\n);\n","import styled from \"styled-components\";\n\nexport const ToastMessage = styled.div`\n  border: 1px #fff solid;\n  background: linear-gradient(45deg, #4158d0, #c850c0);\n  position: fixed;\n  top: 1vh;\n  right: 2vh;\n  border-radius: 1rem;\n  padding: 1rem;\n  color: #fff;\n`;\n\nexport const DismissToast = styled.button`\n  position: absolute;\n  top: -10px;\n  background: #fff;\n  border: none;\n  border-radius: 100%;\n  height: 1.5rem;\n  width: 1.5rem;\n  opacity: 0.9;\n  animation: all 1s ease-in-out;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import React from \"react\";\nimport useNotifications from \"../../hooks/useNotifications\";\nimport { NotificationType } from \"../../providers/notifications\";\nimport { DismissToast, ToastMessage } from \"./styles\";\n\nconst Toast = () => {\n  const { removeNotification, notification } = useNotifications();\n\n  const onClose = () => {\n    removeNotification();\n  };\n\n  return (\n    notification && (\n      <ToastMessage>\n        {notification.type === NotificationType.SUCCESS && \"✅\"}\n        {notification.type === NotificationType.ERROR && \"🔴\"}\n        {notification.message}\n        <DismissToast id=\"close-btn\" onClick={onClose}>\n          x\n        </DismissToast>\n      </ToastMessage>\n    )\n  );\n};\n\nexport default Toast;\n","import React from \"react\";\nimport NotificationsProvider from \"./common/providers/notifications\";\nimport AppRouter from \"./pages/AppRouter\";\nimport Toast from \"./common/components/Notifications\";\n\nexport default function App() {\n  return (\n    <NotificationsProvider>\n      <Toast />\n      <AppRouter />\n    </NotificationsProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL as any,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}